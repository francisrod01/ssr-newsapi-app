{"version":3,"sources":["serviceWorker.js","config.js","actions/index.js","reducers/index.js","reducers/usersReducer.js","components/ArticleDetailModal.js","pages/HomePage.js","pages/NotFoundPage.js","pages/ArticleListPage.js","components/ErrorBoundry.js","components/Header.js","components/Footer.js","App.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","config","apiKey","fetchArticles","source","dispatch","a","url","axios","get","res","type","payload","data","articles","combineReducers","state","action","ArticleDetailModal","props","handler","id","className","style","zIndex","display","opacity","top","width","height","maxHeight","onClick","title","src","urlToImage","alt","description","content","href","target","rel","role","defaultProps","HomePage","useState","modal","setModal","currentArticle","setCurrentArticle","loadArticles","useEffect","scrollTo","Helmet","key","Math","random","property","name","map","article","node","readArticle","component","connect","loadData","store","NotFoundPage","staticContext","notFound","ArticleListPage","category","params","pathname","param","ErrorBoundary","error","errorInfo","this","setState","children","whiteSpace","toString","componentStack","React","Component","Header","menuOpen","setMenuToggle","toggleMenu","transform","to","Date","getFullYear","App","route","renderRoutes","routes","Footer","path","exact","__PRELOADED_STATE__","createStore","reducers","applyMiddleware","thunk","ReactApp","StrictMode","Routes","ReactDOM","hydrate","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.bc7f4d74.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const config = {\n  apiKey: '',\n}\n\nexport default config;\n","import axios from 'axios';\n\nimport config from '../config';\n\nexport const FETCH_ARTICLES = 'fetch_articles';\n\nexport const fetchArticles = source => async dispatch => {\n  let url;\n  if (source) {\n    url = `https://newsapi.org/v2/top-headlines?sources=${source}&apiKey=${config.apiKey}`;\n  } else {\n    url = `https://newsapi.org/v2/top-headlines?country=us&apiKey=${config.apiKey}`;\n  }\n\n  const res = await axios.get(url);\n\n  dispatch({\n    type: FETCH_ARTICLES,\n    payload: res.data.articles,\n  });\n};\n","import { combineReducers } from 'redux';\n\nimport usersReducer from './usersReducer';\n\nexport default combineReducers({\n  articles: usersReducer,\n});\n","import { FETCH_ARTICLES } from '../actions/index';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case FETCH_ARTICLES:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ArticleDetailModal = props => {\n  const { handler, data } = props;\n\n  return (\n    <>\n      <div\n        id=\"modal1\"\n        className=\"modal\"\n        style={{\n          zIndex: 1003,\n          display: 'block',\n          opacity: 1,\n          top: 10,\n          width: '95vw',\n          height: '95vh',\n          maxHeight: '95vh',\n        }}\n      >\n        <div className=\"modal-footer\">\n          <button\n            type=\"button\"\n            onClick={handler}\n            className=\"modal-close waves-effect waves-green btn red\"\n          >\n            Close\n          </button>\n        </div>\n\n        <div className=\"modal-content\">\n          <h4>{data.title}</h4>\n\n          <img\n            className=\"responsive-img\"\n            src={data.urlToImage}\n            alt={data.title}\n          />\n\n          <p>{data.description}</p>\n          <p>{data.content}</p>\n          <div className=\"divider\" />\n\n          <div className=\"section\">\n            <a\n              href={data.url}\n              className=\"waves-effect waves-light btn\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Full Article\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div\n        role=\"presentation\"\n        onClick={handler}\n        className=\"modal-overlay\"\n        style={{\n          zIndex: 1002,\n          display: 'block',\n          opacity: 0.5,\n        }}\n      />\n    </>\n  );\n};\n\nArticleDetailModal.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any),\n  handler: PropTypes.func,\n};\n\nArticleDetailModal.defaultProps = {\n  data: null,\n  handler: null,\n};\n\nexport default ArticleDetailModal;\n","/* eslint-disable no-script-url */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Button } from 'react-materialize';\n\nimport { fetchArticles } from '../actions';\nimport ArticleDetailModal from '../components/ArticleDetailModal';\n\nconst HomePage = props => {\n  const [modal, setModal] = useState(false);\n  const [currentArticle, setCurrentArticle] = useState({});\n\n  const readArticle = article => {\n    setCurrentArticle(article);\n    setModal(true);\n  }\n\n  const closeModal = () => {\n    setModal(false);\n  }\n\n  const renderArticles = () => {\n    return props.articles.map(article => (\n      <div className=\"col s12 m6 l6 x14\" key={article.title}>\n        <div className=\"card large\">\n          <div className=\"card-image\">\n            <LazyLoadImage\n              alt={article.title}\n              src={article.urlToImage}\n            />\n          </div>\n\n          <div className=\"card-content\">\n            <span className=\"card-title\">{article.title}</span>\n          </div>\n\n          <div className=\"card-action\">\n            <Button\n              node=\"a\"\n              className=\"waves-effect waves-light orange\"\n              onClick={() => readArticle(article)}\n            >\n              Read More\n            </Button>\n          </div>\n        </div>\n      </div>\n    ));\n  }\n\n  const head = () => (\n    <Helmet key={Math.random()}>\n      <title>SSR Daily News - ilker ALTIN</title>\n      <meta property=\"og:title\" content=\"SSR Daily News - ilker ALTIN\" />\n      <meta\n        name=\"description\"\n        content=\"Breaking news, latest articles, popular articles from most popular news websites of the world\"\n      />\n      <meta name=\"robots\" content=\"index, follow\" />\n      <link rel=\"canonical\" href=\"https://react-ssr-ilker.herokuapp.com\" />\n    </Helmet>\n  );\n\n  const { fetchArticles: loadArticles } = props;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    loadArticles();\n  }, [loadArticles]);\n\n  return (\n    <div>\n      {head()}\n      {modal ? <ArticleDetailModal handler={closeModal} data={currentArticle} /> : null}\n      <div className=\"row\">\n        <div className=\"section\">\n          <h3>Popular Articles</h3>\n        </div>\n        <div className=\"divider\" />\n\n        <div className=\"section\">\n          <div className=\"row\">{renderArticles()}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  articles: state.articles,\n});\n\nconst loadData = store => {\n  // For the connect tag we need Provider component but on the server at this moment,\n  // app is not rendered yet, so we need to use store itself to load data.\n\n  // Manually dispatch a network request\n  return store.dispatch(fetchArticles());\n}\n\nHomePage.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.any),\n  fetchArticles: PropTypes.func,\n}\n\nHomePage.defaultProps = {\n  articles: [],\n  fetchArticles: null,\n}\n\nexport default {\n  component: connect(\n    mapStateToProps,\n    { fetchArticles }\n  )(HomePage),\n  loadData\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NotFoundPage = ({ staticContext = {} }) => {\n  staticContext.notFound = true;\n\n  return (\n    <div className=\"ui container\">\n      <h3>Page Not Found!!!</h3>\n      <p>Please try again!</p>\n    </div>\n  );\n}\n\nNotFoundPage.propTypes = {\n  staticContext: PropTypes.objectOf(PropTypes.any),\n}\n\nNotFoundPage.defaultProps = {\n  staticContext: {},\n}\n\nexport default {\n  component: NotFoundPage,\n}\n","/* eslint-disable no-script-url */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Button } from 'react-materialize';\n\nimport ArticleDetailModal from '../components/ArticleDetailModal';\nimport { fetchArticles } from '../actions';\n\nconst ArticleListPage = props => {\n  const [modal, setModal] = useState(false);\n  const [currentArticle, setCurrentArticle] = useState({});\n\n  const readArticle = article => {\n    setCurrentArticle(article);\n    setModal(true);\n  };\n\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  const renderArticles = () => {\n    return props.articles.map(article => (\n      <div className=\"col s12 m6 l6 xl4\" key={article.title}>\n        <div className=\"card large\">\n          <div className=\"card-image\">\n            <LazyLoadImage alt={article.title} src={article.urlToImage} />\n          </div>\n\n          <div className=\"card-content\">\n            <span className=\"card-title\">{article.title}</span>\n          </div>\n\n          <div className=\"card-action\">\n            <Button\n              node=\"a\"\n              className=\"btn-flat orange\"\n              onClick={() => readArticle(article)}\n            >\n              Read more\n            </Button>\n          </div>\n        </div>\n      </div>\n    ));\n  };\n\n  const { articles, location, match } = props;\n  const category = props && articles[0] && articles[0].source.name;\n\n  const head = () => (\n    <Helmet key={Math.random()}>\n      <title>{`${category} Articles`}</title>\n      <meta property=\"og:title\" content={`${category} Articles List`} />\n      <meta\n        name=\"description\"\n        content={`Latest ${category} articles, popular articles from most popular news websites of the world`}\n      />\n      <meta name=\"robots\" content=\"index, follow\" />\n      <link rel=\"canonical\" href={`https://react-ssr-ilker.herokuapp.com${location.pathname}`} />\n    </Helmet>\n  );\n\n  const { fetchArticles: loadArticles } = props;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (match.params.id) {\n      loadArticles(match.params.id);\n    } else {\n      loadArticles();\n    }\n  }, [loadArticles, match.params.id]);\n\n  return (\n    <div>\n      {head()}\n      {modal ? <ArticleDetailModal handler={closeModal} data={currentArticle} /> : null}\n      <div className=\"row\">\n        <div className=\"section\">\n          <h3>{category}</h3>\n        </div>\n\n        <div className=\"divider\" />\n\n        <div className=\"section\">\n          <div className=\"row\">{renderArticles()}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  articles: state.articles,\n});\n\nconst loadData = (store, param) => {\n  // For the connect tag we need Provider component but on the server\n  // at this moment app is not rendered yet.\n  // So we need to use store itself to load data.\n\n  // Manually ...\n  return store.dispatch(fetchArticles(param));\n}\n\nArticleListPage.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.any),\n  location: PropTypes.objectOf(PropTypes.any),\n  match: PropTypes.objectOf(PropTypes.any),\n  fetchArticles: PropTypes.func,\n};\n\nArticleListPage.defaultProps = {\n  articles: [],\n  location: null,\n  match: null,\n  fetchArticles: null,\n};\n\nexport default {\n  component: connect(\n    mapStateToProps,\n    { fetchArticles }\n  )(ArticleListPage),\n  loadData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error,\n      errorInfo,\n    });\n\n    // You can also log error messages to an error reporting service here.\n    // ...\n  }\n\n  render() {\n    const { state } = this;\n    const { children } = this.props;\n\n    if (state.errorInfo) {\n      // Error path\n      return (\n        <>\n          <h2>Something went wrong</h2>\n\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {state.error && state.error.toString()}\n            <br />\n            {state.errorInfo.componentStack}\n          </details>\n        </>\n      );\n    }\n\n    // Normally, just render children\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default ErrorBoundary;\n","/* eslint-disable no-script-url */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-materialize';\n\nconst Header = () => {\n  const [menuOpen, setMenuToggle] = useState(false);\n  const toggleMenu = () => setMenuToggle(!menuOpen);\n  const stylesOpen = { transform: 'translateX(0px)' };\n\n  return (\n    <div className=\"navbar-fixed\">\n      <nav className=\"red\">\n        <div className=\"container\">\n          <div className=\"nav-wrapper\">\n            <a href=\"/\" className=\"brand-logo\">\n              SSR News\n            </a>\n\n            <Button\n              node=\"a\"\n              onClick={toggleMenu}\n              className=\"sidenav-trigger waves-light red right\"\n            >\n              <i className=\"material-icons\">menu</i>\n            </Button>\n\n            <div\n              className=\"sidenav-overlay\"\n              style={menuOpen ? { display: 'block', opacity: 1 } : null}\n              onClick={toggleMenu}\n            />\n\n            <ul id=\"slide-out\" className=\"sidenav\" style={menuOpen ? stylesOpen : null}>\n              <li>\n                <a className=\"subheader\">Menu</a>\n              </li>\n\n              <li>\n                <div className=\"divider\" />\n              </li>\n\n              <li>\n                <Link to=\"/\" className=\"item\" onClick={toggleMenu}>\n                  Home\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/articles/techradar\" className=\"item\" onClick={toggleMenu}>\n                  Tech Radar\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/articles/mashable\" className=\"item\" onClick={toggleMenu}>\n                  Mashable\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/articles/the-verge\" className=\"item\" onClick={toggleMenu}>\n                  The Verge\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/articles/wired\" className=\"item\" onClick={toggleMenu}>\n                  Wired\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/articles/recode\" className=\"item\" onClick={toggleMenu}>\n                  Recode\n                </Link>\n              </li>\n            </ul>\n\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n              <li>\n                <Link to=\"/articles/techradar\" className=\"item\">\n                  Tech Radar\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/articles/mashable\" className=\"item\">\n                  Mashable\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/articles/the-verge\" className=\"item\">\n                  The Verge\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/articles/the-next-web\" className=\"item\">\n                  TNW\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/articles/wired\" className=\"item\">\n                  Wired\n                </Link>\n              </li>\n\n              <li>\n                <Link to=\"/articles/recode\" className=\"item\">\n                  Recode\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <footer className=\"page-footer red\">\n      <div className=\"footer-copyright\">\n        <div className=\"container\">\n          &copy; {new Date().getFullYear()} SSR Daily News - ilker ALTIN\n          <a\n            className=\"grey-text text-lighten-4 right\"\n            href=\"https://github.com/ilkeraltin/react-ssr-news\"\n          >\n            Source Code\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","import React from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport PropTypes from 'prop-types';\n\nimport ErrorBoundary from './components/ErrorBoundry';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport './App.css';\n\nconst App = ({ route }) => (\n  <div>\n    <Header />\n\n    <div className=\"container\">\n      <ErrorBoundary>\n        {renderRoutes(route.routes)}\n      </ErrorBoundary>\n    </div>\n\n    <Footer />\n  </div>\n);\n\nApp.propTypes = {\n  route: PropTypes.objectOf(PropTypes.any),\n};\n\nApp.defaultProps = {\n  route: null,\n};\n\nexport default {\n  component: App,\n};\n","import HomePage from './pages/HomePage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport ArticleListPage from './pages/ArticleListPage';\nimport App from './App';\n\nexport default [\n  {\n    ...App,\n    routes: [\n      {\n        ...HomePage,\n        path: '/',\n        exact: true,\n      },\n      {\n        path: '/articles/:id',\n        ...ArticleListPage,\n      },\n      {\n        ...NotFoundPage,\n      },\n    ],\n  }\n];\n","/* eslint-disable no-underscore-dangle */\n// Startup point for client-side application\n\n// import '@babel/polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { renderRoutes } from 'react-router-config';\n\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\nimport Routes from './Routes';\n\nimport './index.css';\n\nconst state = window.__PRELOADED_STATE__;\nconst store = createStore(reducers, state, applyMiddleware(thunk));\n\ndelete window.__PRELOADED_STATE__;\n\nconst ReactApp = () => (\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        {renderRoutes(Routes)}\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\nReactDOM.hydrate(<ReactApp />,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}